class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
         vector<vector<int>> v;
        if(nums.size()<4)
            return v;
        
        sort(nums.begin(),nums.end());
        
      int i=0;
   
        
        while(i<nums.size()-3)
        {   
            int j=i+1;
            while(j<nums.size()-2)
        {
           int sum=target-(nums[i]+nums[j]);
            int k=j+1;
             int l=nums.size()-1;
         
         
         while(k<l)
         {
             if(nums[k]+nums[l]==sum )
             {
                 v.push_back({nums[i],nums[j],nums[k],nums[l]});
                 int x=nums[k];
                 int y=nums[l];
                  while(k!=(nums.size()-1) && nums[k]==x)
                  {
                      ++k;
                  }
                 
                  while(l!=0 && nums[l]==y)
                  {
                      --l;
                  }
                 
             }
             
             else if(nums[k]+nums[l]<sum )
             {
                  int x=nums[k];
                  while(k!=(nums.size()-1) && nums[k]==x)
                  {
                      ++k;
                  }
             }
             
             else
             {
                  int y=nums[l];
                 while(l!=0 && nums[l]==y)
                  {
                      --l;
                  }
             
             }   
         }
           
        int x=nums[j];
         while(nums[j]==x && j!=nums.size()-1)
                  {
                      ++j;
                  }
            
                
                
                
            }
         
         int x=nums[i];
         while(nums[i]==x  && i!=nums.size()-1)
                  {
                      ++i;
                  }
            
        }
            
       return v;
        
        }
};
