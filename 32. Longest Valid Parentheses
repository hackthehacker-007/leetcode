class Solution {
public:
    int longestValidParentheses(string s) {
        if(s.size()==0 || s.size()==1)
            return 0;
        
       stack<int> st;
        st.push(-1);
        
        int max=INT_MIN;
        int count=0;
        
        
        for(int i=0;i<s.size();i++)
        {
            
            if(st.top()==-1)
                st.push(i);
            else if(s[i]==')' && s[st.top()]=='(')
                st.pop();
            else
                st.push(i);
        }
        
        if(st.size()==1)
            return s.size();
       st.push(s.size());
        while(st.size()!=1)
        {
            int x=st.top();
            st.pop();
            int len=x-st.top()-1;
            
            if(len>max)
                max=len;
            
            
            
        }
        
        return max;
        
    }
};
