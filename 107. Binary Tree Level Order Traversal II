/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        vector<vector<int>> ans;
        if(root==NULL)
            return ans;
        queue<TreeNode*> q;
        q.push(root);
        q.push(NULL);
        vector<int> v;
        
        while(q.size()!=0)
        {
            TreeNode* f=q.front();
            q.pop();
            if(f==NULL)
            {
              
                ans.push_back(v);
                v.clear();
                
                if(q.size()!=0)
                    q.push(NULL);
                
            }
            else
            {
                v.push_back(f->val);
                if(f->left!=NULL)
                    q.push(f->left);
                if(f->right!=NULL)
                    q.push(f->right);
                
                
            }
           
        }
        
        reverse(ans.begin(),ans.end());
        return ans;
    }
};
