/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void path( vector<vector<int>> &ans,  vector<int> v,TreeNode* root,int targetSum,int sum)
    {
        if(root==NULL)
        {
            return;
        }
        
        sum+=root->val;
        v.push_back(root->val);
        
        if(root->left==NULL & root->right==NULL)
        {
            if(sum==targetSum)
            {
                ans.push_back(v);
               
            }
             sum-=root->val;
             v.pop_back();
            return;
            
        }
        
        path( ans, v,root->left,targetSum,sum);
        path( ans, v,root->right,targetSum,sum);
        
        
        
    }
    
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
        vector<vector<int>> ans;
        vector<int> v;
        
        path(ans,v,root,targetSum,0);
        
        return ans;
    }
};
