/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
     int carry=0;
        ListNode* head=NULL;
        ListNode* tail=NULL;
        int sum=0;
        
        
        while(l1!=NULL && l2!=NULL)
        {
            sum=l1->val+l2->val+carry;
            carry=sum/10;
            sum=sum%10;
    
            
          ListNode* temp=new ListNode(sum);
            
            if(head==NULL)
            {
               
                head=temp;
                tail=head;
            }
            else
            {
                tail->next=temp;
                tail=tail->next;
            }
            
            l1=l1->next;
            l2=l2->next;
            
            
        }
        
        if(l1!=NULL)
        { while(l1!=NULL)
        {
           sum=l1->val+carry;
            carry=sum/10;
            sum=sum%10;
    
            
          ListNode* temp=new ListNode(sum);
            
            if(head==NULL)
            {
               
                head=temp;
                tail=head;
            }
            else
            {
                tail->next=temp;
                tail=tail->next;
            }
            
            l1=l1->next;
            
            
            
        }
        }
        
        if(l2!=NULL)
        { while(l2!=NULL){
             sum=l2->val+carry;
            carry=sum/10;
            sum=sum%10;
    
            
          ListNode* temp=new ListNode(sum);
            
            if(head==NULL)
            {
               
                head=temp;
                tail=head;
            }
            else
            {
                tail->next=temp;
                tail=tail->next;
            }
            
            l2=l2->next;
            
        }
            
        }
          if(carry!=0){
         ListNode* temp=new ListNode(carry);
              tail->next=temp;
                tail=tail->next;
              
          }
        
        
        
        return head;
    }
    
};
