class Solution {
public:
    
    bool helper(vector<vector<char>>& board,int row , int col, char x){
        
        
        //row
        
        for(int i=0;i<board[0].size();i++)
        {
            if(board[row][i]==x && i!=col)
                return false;
        }
        
        //col
        
         for(int i=0;i<board.size();i++)
        {
            if(board[i][col]==x && i!=row)
                return false;
        }
        
        //3*3 matrix
        
        int m=row-(row%3);
        int n=col-(col%3);
        
        for(int i=m;i<m+3;i++){
            for(int j=n;j<n+3;j++){
                
               if(board[i][j]==x && i!=row && j!=col)
                return false;
                
            }
        }
        
    
        return true;
    }
    bool isValidSudoku(vector<vector<char>>& board) {
        
        for(int i=0;i<board.size();i++){
            for(int j=0;j<board[0].size();j++){
                if(board[i][j]!='.' && !(helper(board,i,j,board[i][j])))
                    return false;
            }
        }
        return true;
        
    }
                  
};
