#include <list>
class Solution {
public:
    vector<vector<int>> merge(vector<vector<int>>& intervals) {
    
        vector<vector<int>> ans;
        sort(intervals.begin(), intervals.end());
        
        
        if(intervals.size()==0)
            return ans;
        int i=0;
         if(i+1<intervals.size() && intervals[i][1]>=intervals[i+1][0] )
            {   vector<int> v;
                v.push_back(min(intervals[i][0],intervals[i+1][0]));
                v.push_back(max(intervals[i][1],intervals[i+1][1]));
                            
                ans.push_back(v);
               i+=2;
                            
            }
          else{
             ans.push_back(intervals[i]);
              i++;
          }
                   
        
        while(i<intervals.size())
        {
            
            if(ans[ans.size()-1][1]>=intervals[i][0])
            {   vector<int> v;
                v.push_back(min(ans[ans.size()-1][0],intervals[i][0]));
                v.push_back(max(ans[ans.size()-1][1],intervals[i][1]));
                   
               ans.pop_back();
                ans.push_back(v);
               i++;
                            
            }
          else{
             ans.push_back(intervals[i]);
              i++;
          }
                                                              
        }
        return ans;
    }
                                    
};
