/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* sortedListToBST(ListNode* head) {
        if(head==NULL)
            return NULL;
        
        if(head->next==NULL)
        {
             TreeNode* root=new TreeNode(head->val);
            return root;
        }
        
        ListNode* slow=head;
        ListNode* fast=head;
        ListNode*prev=NULL;
        
        while(fast!=NULL && fast->next!=NULL)
        {
            fast=fast->next->next;
            prev=slow;
            slow=slow->next;
        }
        
        prev->next=NULL;
        
        TreeNode* root=new TreeNode(slow->val);
        
        slow=slow->next;
        
        TreeNode*l= sortedListToBST(head);
           TreeNode*r= sortedListToBST(slow);
        
        root->left=l;
        root->right=r;
        
        
        return root;
        
        
        
        
    }
};
