class Solution {
public:
   set<vector<int>> s;
      void per(vector<int>& nums, vector<vector<int>> &ans,int start) {
      
        if(start==nums.size()-1)
        {   
           if(s.find(nums)==s.end())
           {  
               s.insert(nums);
               ans.push_back(nums);
           }
            return;
        }
        if(start>=nums.size())
        {
            
            return ;
        }
          
          for (int i =start; i < nums.size();i++)
        { 
             if(i>start && nums[i]==nums[i-1])
                 continue;
            swap(nums[i], nums[start]);
            per(nums,ans,start+1);
            swap(nums[i], nums[start]);
        }
        
    }
  

    vector<vector<int>> permuteUnique(vector<int>& nums) {
          vector<vector<int>> ans;
        int start=0;
        sort(nums.begin(),nums.end());
          per(nums,ans,start);
        return ans;
    }
};
